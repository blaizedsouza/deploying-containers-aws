---
AWSTemplateFormatVersion: "2010-09-09"
Description: "ECS service and task"

Parameters:
  ClusterName:
    Type: String
    Description: "Specify which ECS cluster the service belongs to"
  AlbStack:
    Type: String
    Description: "Specify name of the CloudFormation stack for ALB"

Resources:

  # grant the TASK (collection of containers) the ability to perform its job
  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        # this inline policy allows this role to access the secrets manager
        # in order to retrieve the username and password for the
        # private docker registry
        - PolicyName: "AccessToSecretStore"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "secretsmanager:GetSecretValue"
                # this resource exists in Richard's account
                # REPLACE it with the ARN of YOUR secret
                Resource: "arn:aws:secretsmanager:us-east-2:301228794388:secret:docker.cerulean-gU0eHG"

  # create a group in CloudWatch logs for the app to write to
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /microservices/billing

  # create the service that will maintain our containers for this microservice
  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: billing
      Cluster: !Ref ClusterName
      DesiredCount: 3
      TaskDefinition: !Ref TaskDefinition
      LaunchType: EC2
      LoadBalancers:
        - ContainerName: billing
          ContainerPort: 80
          TargetGroupArn:
            Fn::ImportValue:
              !Sub ${AlbStack}-TargetGroupForServiceBilling

  # define the collection of containers and cpu/memory/volume requirements
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: billing
      RequiresCompatibilities:
        - EC2
      Memory: 512
      Cpu: 256
      NetworkMode: bridge
      ExecutionRoleArn: !Ref TaskExecutionRole
      ContainerDefinitions:
        - Name: billing
          Image: docker.cerulean.systems/hello # start with a ready made image and update once ImageRepo has an image
          RepositoryCredentials:
            CredentialsParameter: "arn:aws:secretsmanager:us-east-2:301228794388:secret:docker.cerulean-gU0eHG"
          Environment:
            - Name: SERVICE
              Value: billing
          Essential: true
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: !Ref AWS::StackName
